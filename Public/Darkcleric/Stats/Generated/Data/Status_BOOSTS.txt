new entry "CL_PassiveStrengthBoost"
type "StatusData"
data "StatusType" "BOOST"
data "DisplayName" "hbb27c9b1g0d5bg4e2fg8088g8ad722028dc0;1"
data "Description" "h85ea4598g376cg43ecg8cb3gfc5cbb530d1c;1"
data "Icon" "" <!-- Placeholder for the icon -->
data "Boosts" "Attribute(Strength,2)"
data "StackId" "CL_PASSIVE_STRENGTH_BOOST"
data "StatusPropertyFlags" "IgnoreResting"
data "StatusEffect" "" <!-- (Optional: Fill in later if needed) -->

new entry "CL_DarkResilience_Necrotic"
type "StatusData"
data "StatusType" "BOOST"
data "DisplayName" "hd5736dc9g7a45g4ff7g895cg6cec71c1a4a6;1"
data "Description" "h5bf53fb5ge200g4686gb405g9a3fc3f08bf9;1"
data "Icon" "Mailem_DK_DarkResilience"  <!-- Placeholder Icon -->
data "StackId" "CL_DARKRESILIENCE"
data "Boosts" "Resistance(Necrotic,Resistant)"
data "StatusGroups" "SG_RemoveOnRespec"
data "StatusPropertyFlags" "IgnoreResting"

new entry "CL_DarkFortitude_IncreaseHP"
type "StatusData"
data "StatusType" "BOOST"
data "DisplayName" "h00e1642bgeb6dg4224ga42bg8959a2420ad0;1" <!-- Handle for DisplayName -->
data "Description" "hba443666gedd2g4cb0g8c35g76aa421e2e3a;1" <!-- Handle for Description -->
data "Icon" "Mailem_DK_DarkFortitude" <!-- Placeholder Icon -->
data "StackId" "CL_DARKFORTITUDE"
data "Boosts" "IncreaseMaxHP(3)" <!-- Adjust the value as needed -->
data "StatusGroups" "SG_RemoveOnRespec"
data "StatusPropertyFlags" "IgnoreResting"

new entry "CL_DarkFortitudeUnleashed"
type "StatusData"
data "StatusType" "BOOST"
data "DisplayName" "h45dd1f16ge693g4453g87f8gbdde4fd73ff3;1" <!-- Handle for DisplayName -->
data "Description" "hac6cd796gcb3bg4af1g8714g63f0c6483bd3;1" <!-- Handle for Description -->
data "Icon" "Mailem_DK_DarkFortitude" <!-- Placeholder or custom icon -->
data "StackId" "CL_DARKFORTITUDE"
data "Boosts" "IncreaseMaxHP(2)" <!-- Adjusted HP increase value -->
data "StatusGroups" "SG_RemoveOnRespec" <!-- Ensure it is removed upon respeccing -->
data "StatusPropertyFlags" "IgnoreResting"

new entry "CL_ShadowVeil_StealthCheck"
type "StatusData"
data "StatusType" "BOOST"
data "DisplayName" "h2c05718egc274g45fagb9d7g4e923e61b79f;1" <!-- Name handle -->
data "Description" "h32a5afe8g0862g4966ga808gaefa60f40d69;1" <!-- Description handle -->
data "Icon" "Mailem_DK_ShadowVeil" <!-- Placeholder Icon -->
data "StackId" "CL_SHADOWVEIL"
data "StackPriority" "0" <!-- Default stack priority -->
data "Boosts" "Advantage(Skill, Stealth)" <!-- Advantage on Stealth checks -->
data "StatusGroups" "SG_RemoveOnRespec" <!-- Status removed upon respec -->
data "StatusPropertyFlags" "IgnoreResting" <!-- Ensures permanence -->
data "StatusEffect" ""

new entry "CL_CORRUPTION_AURA_DAMAGE"
type "StatusData"
data "StatusType" "BOOST"
using "SPIRIT_GUARDIANS_NECROTIC_AURA" <!-- Reuse the base game aura effect -->
data "DescriptionParams" "DealDamage(3d8,Necrotic)" <!-- Adjusted for your needs -->
data "AuraStatuses" "TARGET:IF(Enemy() and not (Dead() or HasStatus('KNOCKED_OUT'))):ApplyStatus(CL_CORRUPTION_AURA_DAMAGE_EFFECT,100,-1)" <!-- Applies a new custom damage effect -->
data "TooltipDamage" "DealDamage(3d8,Necrotic)" <!-- Tooltip damage value -->
data "StatusEffect" "" <!-- Empty as it uses an external effect -->


new entry "CL_CORRUPTION_AURA_DAMAGE_EFFECT"
type "StatusData"
data "StatusType" "BOOST"
using "SPIRIT_GUARDIANS_NECROTIC_4" <!-- Reuse the base game damage effect as a template -->
data "DescriptionParams" "DealDamage(3d8,Necrotic)" <!-- Adjusted for your needs -->
data "TooltipDamage" "DealDamage(3d8,Necrotic)" <!-- Tooltip damage value -->
data "OnApplySuccess" "IF(not HasStatus('CORRUPTION_AURA_DAMAGE_RECEIVED')):DealDamage(3d8,Necrotic,Magical);ApplyStatus(CORRUPTION_AURA_DAMAGE_RECEIVED,100,1)"
data "OnApplyFail" "IF(not HasStatus('CORRUPTION_AURA_DAMAGE_RECEIVED')):DealDamage(3d8/2,Necrotic,Magical);ApplyStatus(CORRUPTION_AURA_DAMAGE_RECEIVED,100,1)"
data "OnTickSuccess" "IF(not HasStatus('CORRUPTION_AURA_DAMAGE_RECEIVED')):DealDamage(3d8,Necrotic,Magical);ApplyStatus(CORRUPTION_AURA_DAMAGE_RECEIVED,100,1)"
data "OnTickFail" "IF(not HasStatus('CORRUPTION_AURA_DAMAGE_RECEIVED')):DealDamage(3d8/2,Necrotic,Magical);ApplyStatus(CORRUPTION_AURA_DAMAGE_RECEIVED,100,1)"
data "StatusEffect" "" <!-- Reuse base game effect or specify a new one -->

new entry "CORRUPTION_AURA_DAMAGE_RECEIVED"
type "StatusData"
data "StatusType" "BOOST"
data "DisplayName" "h8bea2123g24e9g4956gb2d7g5ed1562dd2d6;1" <!-- Handle for DisplayName -->
data "Description" "ha4b8c109gf22bg4f25gadaegcfe5d47e7d72;1" <!-- Handle for Description -->
data "Icon" "Icon_CorruptionAuraDamageReceived" <!-- Placeholder Icon -->
data "StackId" "CL_CORRUPTIONAURA" <!-- Unique stack ID for this effect -->
data "StatusGroups" "SG_RemoveOnRespec" <!-- Optional: Adjust status groups as needed -->
data "StatusPropertyFlags" "DisableCombatlog" <!-- Optional: Adjust properties as needed -->
data "StatusEffect" "" <!-- Unique GUID for the status effect -->
data "AuraStatuses" "OnStatusApplied" <!-- Apply damage when status is applied -->


new entry "CL_UNHOLY_CONDUIT_BOOST"
type "StatusData"
data "StatusType" "BOOST"
data "DescriptionParams" "IncreaseSpellDamage(2d8,Necrotic)" <!-- Adjusted for your needs -->
data "TooltipDamage" "IncreaseSpellDamage(2d8,Necrotic)" <!-- Tooltip damage value -->
data "OnApplySuccess" "IncreaseDamage(2d8,Necrotic)" <!-- Increases necrotic damage on success -->
data "OnApplyFail" "IncreaseDamage(1d8,Necrotic)" <!-- Increases necrotic damage on failure -->
data "StatusEffect" ""